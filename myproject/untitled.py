# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import random
import os
from gif import loadingGif
from functools import partial
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow,QDesktopWidget,QWidget,QHeaderView,QAbstractItemView,QComboBox,QMenu, QAction,QCheckBox,QBoxLayout,QVBoxLayout,QDateEdit,QToolButton, QProgressBar
from PyQt5.QtCore import QTimer, QCoreApplication,Qt,QDate
from PyQt5.QtSvg import QSvgWidget
from mpl_toolkits.mplot3d import Axes3D
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure
from matplotlib.lines import Line2D
from PyQt5.QtGui import QPainter, QPen,QColor, QPolygonF
import matplotlib
import matplotlib.cbook as cbook
import pandas
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *
import matlab
import matlab.engine
import datetime
import math
from SwitchButton import SwitchButton
from ScrollTestWindow import ScrollTextWidget
#eng = matlab.engine.start_matlab()
#eng.cd("C:\\Users\\whitefork\\Desktop\\python\\myproject",nargout=0)

class MyButton(QPushButton):
    i=0
    j=0
    def __init__(self, text):
        super().__init__(text)

      

class MyCustomWidget(QWidget):
    def paintEvent(self, event):
        painter = QPainter(self)
        pen = QPen()
        pen.setColor(QColor(0, 0, 255))  # 设置线条颜色为蓝色
        pen.setWidth(4)  # 设置线宽为2像素
        pen.setStyle(Qt.SolidLine)  # 设置线条样式为虚线
        painter.setPen(pen)

        x1, y1 = 10, 10  # 起点坐标
        x2, y2 = self.width(), 10  # 终点坐标（与窗口右边对齐）
        painter.drawLine(x1, y1, x2, y2)

class MyCustomWidget1(QWidget):
    def paintEvent(self, event):
        painter = QPainter(self)
        pen = QPen()
        pen.setColor(QColor(0, 0, 255))  # 设置线条颜色为蓝色
        pen.setWidth(4)  # 设置线宽为2像素
        pen.setStyle(Qt.SolidLine)  # 设置线条样式为虚线
        painter.setPen(pen)

        x1, y1 = 10, 10  # 起点坐标
        x2, y2 = 10, self.width()  # 终点坐标（与窗口右边对齐）
        painter.drawLine(x1, y1, x2, y2)

class HexagonWidget(QWidget):
    length=0.0
    def __init__(self):
        super().__init__()
    def __init__(self,length):
        super().__init__()
        self.length=length

    def paintEvent(self, event):
        painter = QPainter(self)
        painter.setRenderHint(QPainter.Antialiasing)

        # 设置填充颜色
        painter.setBrush(QColor(112, 48, 160))  # 这里设置为红色，你可以根据需要更改颜色

        # 定义六边形的顶点坐标
        points = [
            QPoint(math.sqrt(3)*self.length/2.0, 0),  
            QPoint(math.sqrt(3)*self.length, self.length/2.0),  
            QPoint(math.sqrt(3)*self.length, self.length/2.0*3.0),  
           QPoint(math.sqrt(3)*self.length/2.0, self.length*2.0),  
            QPoint(0,self.length/2.0*3.0),  
            QPoint(0,self.length/2.0),   
        ]

        # 创建QPolygonF对象
        polygon = QPolygon(points)

        # 绘制六边形
        painter.drawPolygon(polygon)

    
    
class Ui_MainWindow(object):
    num=5
    a=[]
    data=[]
    id=0
    def __init__(self):
        super().__init__()


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        
        
        self.font = QFont()  # 设置字样式
        self.font.setFamily("黑体")  # 设置字体
        self.font.setBold(1)  # 设置为粗体
        self.font.setPixelSize(30)  # 字体大小
        self.dateinformation=QtWidgets.QLabel(self)
        self.dateinformation.setText(datetime.date.today().strftime("%Y-%m-%d"))
        self.dateinformation.setGeometry(QtCore.QRect(90, 45, 150, 40))
        self.dateinformation.setFont(self.font)  # 加载字体    
        
    
        
        self.widget_menu = QtWidgets.QWidget(self)  # 注意，传入参数代表一个从属关系，表示创建的QWidget属于self，也就是MainWindow自身
        self.widget_menu.setObjectName("widget_menu")
        # 设置窗口的左上角x,y,窗口的width和height
        self.widget_menu.setGeometry(QtCore.QRect(80, 90, 950, 5))
        self.widget_menu.setStyleSheet("QWidget{background-color:qlineargradient(x1: 0, y1: 0, x2: 1, y2: 0,stop:0.1 #9647E7,stop: 1.0 #004098);border:2px solid balck;}")


        self.widget_menu2 = QtWidgets.QWidget(self)  # 注意，传入参数代表一个从属关系，表示创建的QWidget属于self，也就是MainWindow自身
        self.widget_menu2.setObjectName("widget_menu2")
        # 设置窗口的左上角x,y,窗口的width和height
        self.widget_menu2.setGeometry(QtCore.QRect(0, 40, 40, 400))

        # 1.2 创建一个水平布局
        self.menuLayout2 = QVBoxLayout(self.widget_menu2)
        # 1.3 设置水平布局的属性
        self.menuLayout2.setSpacing(0)  # 设置间距

        # 1.4 为菜单栏设置按钮组
        self.menuButtonGroup2 = QButtonGroup()      
        menuStr2 = []
        menuStr2.append("电\n站\n信\n息")
        menuStr2.append("设\n置")
        menuStr2.append("发\n电\n状\n态")
        menuStr2.append("状\n态\n统\n计")
        menuStr2.append("对\n比\n分\n析")
        self.font = QFont()  # 设置字样式
        self.font.setFamily("黑体")  # 设置字体
        self.font.setBold(1)  # 设置为粗体
        self.font.setPixelSize(27)  # 字体大小
        # 1.5 添加按钮至按钮组
        count2 = 0  # 设置按钮在按钮组内的序号
        for menu_str2 in menuStr2:

              
            menuBtn2 = QPushButton()  # 创建按钮

            menuBtn2.setFont(self.font)  # 加载字体
            menuBtn2.setText(menu_str2)  # 加载文字
            menuBtn2.setParent(self.widget_menu2)  # 属于一级菜单栏的窗口
  
            
            if count2==0:
              menuBtn2.clicked.connect(self.gotoanother0)
              menuBtn2.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color: rgb(42, 84, 238);}"
                                  "QPushButton::hover{color:rgb(58,164,98)}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
            if count2==1:
              menuBtn2.clicked.connect(self.gotoanother1)
              menuBtn2.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color: #2A54EE;}"
                                  "QPushButton::hover{color:rgb(58,164,98)}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
            if count2==2:
              menuBtn2.clicked.connect(self.gotoanother2)
              menuBtn2.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color: rgb(17, 63, 213);}"
                                  "QPushButton::hover{color:rgb(58,164,98)}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
            if count2==3:
              menuBtn2.clicked.connect(self.gotoanother3)
              menuBtn2.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color: rgb(14, 10, 166);}"
                                  "QPushButton::hover{color:rgb(58,164,98)}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
            if count2==4:
              menuBtn2.clicked.connect(self.gotoanother4)
              menuBtn2.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color: #0E0AA6;}"
                                  "QPushButton::hover{color:rgb(58,164,98)}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )


            self.menuLayout2.addWidget(menuBtn2)  # 一级菜单栏的水平布局中添加该按钮
            self.menuButtonGroup2.addButton(menuBtn2, count2)  # 把按钮添加到按钮组中
            count2 += 1
            





        #生成标题
        
        # 创建label，创建之初指定父亲
        self.label = QtWidgets.QLabel("分布式光伏发电在线监测平台", self.centralwidget)
        # 显示位置与大小：(x, y, w, h)
        self.label.setGeometry(370, 10, 450, 50)
        self.label.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.label.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.label.setFrameShape(QFrame.Box)
        self.label.setAlignment(Qt.AlignCenter) 
        self.label.setStyleSheet("QLabel{color:white;font-size:50px;font-weight:normal;font-family:SimHei;border-width: 1px;border-style: solid;border-color: black;background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0.1 #06BDFF,stop: 0.5 #1397EF, stop: 1.0 #1321EF);}")



        self.form1= QtWidgets.QWidget(self)
        self.form1.setObjectName("form1")
        self.form2_0= QtWidgets.QWidget(self)
        self.form2_0.setObjectName("form2_0")
        self.form2_1= QtWidgets.QWidget(self)
        self.form2_1.setObjectName("form2_1")
        self.form3= QtWidgets.QWidget(self)
        self.form3.setObjectName("form3")
        self.form4= QtWidgets.QWidget(self)
        self.form4.setObjectName("form5")
        self.form5= QtWidgets.QWidget(self)
        self.form5.setObjectName("form5")
        

        self.station_id= QtWidgets.QComboBox(self.form1)
        self.station_id.addItem('光伏电站1')
        self.station_id.addItem('光伏电站2')
        self.station_id.addItem('光伏电站3')
        self.station_id.setGeometry(890, 10, 120, 30)
        self.station_id.setStyleSheet("QComboBox{color:white;font-size:30px;font-weight:normal;font-family:SimHei;border-width: 1px;border-style: solid;border-color: black;background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0.1 #4E2170,stop: 0.52 #642B8F, stop: 1.0 #7934AE);}")


        self.window0 = QtWidgets.QLabel( self.form1)
        self.window0.setText("光伏电站拓扑")
        self.window0.setGeometry(100, 110, 120, 32)
        self.window0.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.window0.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.window0.setFrameShape(QFrame.Box)
        self.window0.setAlignment(Qt.AlignCenter)
        self.window0.setLineWidth(2)
        self.window0.setStyleSheet("QLabel{color:white;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);background-color: rgb(0, 64, 152);}")

        self.picture1 = QtWidgets.QLabel(self.form1)
        self.picture1.setObjectName("picture1")
        cover_img = os.path.abspath("myproject\\picture\\picture1.png")
        image1 = QtGui.QPixmap(cover_img)
        self.picture1.setScaledContents(True)
        self.picture1.setPixmap(image1)
        self.picture1.setGeometry(QtCore.QRect(100, 145, 400, 365))

        self.window2 = QtWidgets.QLabel( self.form1)
        self.window2.setWordWrap(True)
        # 显示位置与大小：(x, y, w, h)
        self.window2.setGeometry(100, 110, 400,400)
        self.window2.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.window2.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.window2.setAlignment(Qt.AlignCenter)
        self.window2.setLineWidth(3)
        self.window2.setFont(self.font)

        self.window3 = QtWidgets.QLabel( self.form1)
        self.window3.setText("光伏电站信息:")
        self.window3.setGeometry(525, 110, 120, 32)
        self.window3.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.window3.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.window3.setFrameShape(QFrame.Box)
        self.window3.setAlignment(Qt.AlignCenter)
        self.window3.setLineWidth(2)
        self.window3.setStyleSheet("QLabel{color:white;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);background-color: rgb(0, 64, 152);}")

        self.window12 = QtWidgets.QLabel( self.form1)
        self.window12.setText("模块数值")
        self.window12.setGeometry(690, 110, 120, 32)
        self.window12.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.window12.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.window12.setFrameShape(QFrame.Box)
        self.window12.setAlignment(Qt.AlignCenter)
        self.window12.setLineWidth(2)
        self.window12.setStyleSheet("QLabel{color:white;font-size:30px;font-weight:normal;font-family:SimHei;border-width: 1px;border-style: solid;border-color: black;background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0.1 #4E2170,stop: 0.52 #642B8F, stop: 1.0 #7934AE);}")


        self.window8=QtWidgets.QLabel(self.form1)
        self.window8.setText("峰值功率:80 W")
        self.window8.setGeometry(550, 160, 300, 32)
        self.window8.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        self.windowline4=QtWidgets.QLabel(self.form1)
        self.windowline4.setGeometry(550, 195, 300, 2)
        self.windowline4.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
      


        self.window4=QtWidgets.QLabel(self.form1)
        self.window4.setText("额定电压:18 V")
        self.window4.setGeometry(550, 200, 300, 32)
        self.window4.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        self.windowline=QtWidgets.QLabel(self.form1)
        self.windowline.setGeometry(550, 235, 300, 2)
        self.windowline.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
      


        
        self.window5=QtWidgets.QLabel(self.form1)
        self.window5.setText("额定电流:4.44 A")
        self.window5.setGeometry(550, 240, 300, 32)
        self.window5.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        self.windowline1=QtWidgets.QLabel(self.form1)
        self.windowline1.setGeometry(550, 275, 300, 2)
        self.windowline1.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
      
      
        
        self.window6=QtWidgets.QLabel(self.form1)
        self.window6.setText("开路电压:21.6 V")
        self.window6.setGeometry(550, 280, 300, 32)
        self.window6.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        self.windowline2=QtWidgets.QLabel(self.form1)
        self.windowline2.setGeometry(550, 315, 300, 2)
        self.windowline2.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
      
        
        self.window7=QtWidgets.QLabel(self.form1)
        self.window7.setText("短路电流:4.89 A")
        self.window7.setGeometry(550, 320, 300, 32)
        self.window7.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        self.windowline3=QtWidgets.QLabel(self.form1)
        self.windowline3.setGeometry(550, 355, 300, 2)
        self.windowline3.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
              
        self.window9=QtWidgets.QLabel(self.form1)
        self.window9.setText("功率温度系数：-0.47 %/℃")
        self.window9.setGeometry(550, 360, 300, 32)
        self.window9.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        self.windowline5=QtWidgets.QLabel(self.form1)
        self.windowline5.setGeometry(550, 395, 300, 2)
        self.windowline5.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
        
        self.window10=QtWidgets.QLabel(self.form1)
        self.window10.setText("短路电流温度系数:0.045 %/℃")
        self.window10.setGeometry(550, 400, 300, 32)
        self.window10.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        self.windowline6=QtWidgets.QLabel(self.form1)
        self.windowline6.setGeometry(550, 435, 300, 2)
        self.windowline6.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
        
        self.window11=QtWidgets.QLabel(self.form1)
        self.window11.setText("开路电压温度系数：-0.34 %/℃")
        self.window11.setGeometry(550, 440, 300, 32)
        self.window11.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        self.windowline7=QtWidgets.QLabel(self.form1)
        self.windowline7.setGeometry(550, 475, 300, 2)
        self.windowline7.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
        
        
        




        self.window1 = QtWidgets.QLabel( self.form1)
        self.window1.setWordWrap(True)
        # 显示位置与大小：(x, y, w, h)
        self.window1.setGeometry(525, 110, 400, 400)
        self.window1.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.window1.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.window1.setAlignment(Qt.AlignCenter)
        self.window1.setLineWidth(3)
        self.window1.setFont(self.font)

        self.station_id1_frame=QtWidgets.QLabel(self.form2_0)
        self.station_id1_frame.setWordWrap(True)
        # 显示位置与大小：(x, y, w, h)
        self.station_id1_frame.setGeometry(117, 117, 800, 400)
        self.station_id1_frame.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.station_id1_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.station_id1_frame.setAlignment(Qt.AlignCenter)
        self.station_id1_frame.setLineWidth(3)
        self.station_id1_frame.setFont(self.font)

        self.station_id1_frame1=QtWidgets.QLabel(self.form2_1)
        self.station_id1_frame1.setWordWrap(True)
        # 显示位置与大小：(x, y, w, h)
        self.station_id1_frame1.setGeometry(117, 117, 800, 400)
        self.station_id1_frame1.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.station_id1_frame1.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.station_id1_frame1.setAlignment(Qt.AlignCenter)
        self.station_id1_frame1.setLineWidth(3)
        self.station_id1_frame1.setFont(self.font)

        self.station_id1= QtWidgets.QComboBox(self.form2_0)
        self.station_id1.addItem('监测场景设置')
        self.station_id1.addItem('监测方法设置')
        self.station_id1.setGeometry(120, 120, 140, 30)
        self.station_id1.setStyleSheet("QComboBox{color:white;font-size:30px;font-weight:normal;font-family:SimHei;border-width: 1px;border-style: solid;border-color: black;background-color: #004098;}")
        self.station_id1.activated.connect(self.gotoanother1)


        
        self.station_id1_button0 = QtWidgets.QPushButton('正常',self.form2_0)
        self.station_id1_button0.setGeometry(300,120,100,30)
        self.station_id1_button0.setStyleSheet("QPushButton{color:white;font-size:30px;font-weight:normal;font-family:SimHei;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:0.66 #000000);}"
                                  "QPushButton::hover{color:blue}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.station_id1_button0.clicked.connect(self.station_id1_button0_clicked)

        self.station_id1_button1 = QtWidgets.QPushButton('短路',self.form2_0)
        self.station_id1_button1.setGeometry(410,120,100,30)
        self.station_id1_button1.setStyleSheet("QPushButton{color:grey;font-size:30px;font-weight:normal;font-family:SimHei;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:1 #D9D9D9);}"
                                  "QPushButton::hover{color:blue}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.station_id1_button1.clicked.connect(self.station_id1_button1_clicked)

        self.station_id1_button2 = QtWidgets.QPushButton('开路',self.form2_0)
        self.station_id1_button2.setGeometry(520,120,100,30)
        self.station_id1_button2.setStyleSheet("QPushButton{color:grey;font-size:30px;font-weight:normal;font-family:SimHei;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:1 #D9D9D9);}"
                                  "QPushButton::hover{color:blue}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.station_id1_button2.clicked.connect(self.station_id1_button2_clicked)

        self.station_id1_button3 = QtWidgets.QPushButton('阴影1',self.form2_0)
        self.station_id1_button3.setGeometry(630,120,100,30)
        self.station_id1_button3.setStyleSheet("QPushButton{color:grey;font-size:30px;font-weight:normal;font-family:SimHei;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:1 #D9D9D9);}"
                                  "QPushButton::hover{color:blue}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.station_id1_button3.clicked.connect(self.station_id1_button3_clicked)
        self.station_id1_button4 = QtWidgets.QPushButton('阴影2',self.form2_0)
        self.station_id1_button4.setGeometry(740,120,100,30)
        self.station_id1_button4.setStyleSheet("QPushButton{color:grey;font-size:30px;font-weight:normal;font-family:SimHei;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:1 #D9D9D9);}"
                                  "QPushButton::hover{color:blue}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.station_id1_button4.clicked.connect(self.station_id1_button4_clicked)
        
        
        self.station_id1_picture = QtWidgets.QLabel(self.form2_0)
        self.station_id1_picture.setObjectName("station_id1_picture")
        station_id1_picture_cover_img = os.path.abspath("myproject\\picture\\picture1.png")
        station_id1_picture_image1 = QtGui.QPixmap(station_id1_picture_cover_img)
        self.station_id1_picture.setScaledContents(True)
        self.station_id1_picture.setPixmap(station_id1_picture_image1)
        self.station_id1_picture.setGeometry(QtCore.QRect(125, 170, 750,330))
        
        
        self.station_id2=QtWidgets.QLabel("训练数据范围",self.form2_1)
        self.station_id2.setGeometry(200,160,140,30)
        self.station_id2.setStyleSheet("QLabel{color:white;font-size:30px;font-weight:normal;font-family:SimHei;border-width: 1px;border-style: solid;border-color: black;background-color: #004098;}")
        self.station_id2.setAlignment(Qt.AlignCenter)        
        
        self.station_id2_date_information=QtWidgets.QLabel("起始日期:",self.form2_1)
        self.station_id2_date_information.setGeometry(150,200,100,30)
        self.station_id2_date_information.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.station_id2_date_information1=QtWidgets.QLabel("终止日期:",self.form2_1)
        self.station_id2_date_information1.setGeometry(150,255,100,30)
        self.station_id2_date_information1.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")

        #日期框
        self.station_id2_datebox=QtWidgets.QDateEdit(self.form2_1)
        self.station_id2_datebox.setDisplayFormat("yyyy-MM-dd")
        self.start_date = QDate(2024, 4, 1)
        self.station_id2_datebox.setDate(self.start_date)
        self.station_id2_datebox.setGeometry(260, 200, 100, 30)
        self.station_id2_datebox.setCalendarPopup(True)
        self.station_id2_datebox.dateChanged.connect(self.calculateDays)
        

        self.station_id2_dateline=QtWidgets.QLabel(self.form2_1)
        self.station_id2_dateline.setGeometry(150, 240, 220, 2)
        self.station_id2_dateline.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
      
  
  
        self.station_id2_datebox1=QtWidgets.QDateEdit(self.form2_1)
        self.station_id2_datebox1.setDisplayFormat("yyyy-MM-dd")
        self.end_date = QDate(2024, 4, 29)
        self.station_id2_datebox1.setDate(self.end_date)
        self.station_id2_datebox1.setGeometry(260, 255, 100, 30)
        self.station_id2_datebox1.setCalendarPopup(True)

        self.station_id2_datebox1.dateChanged.connect(self.calculateDays)
        
        

        self.station_id2_dateline1=QtWidgets.QLabel(self.form2_1)
        self.station_id2_dateline1.setGeometry(150, 295, 220, 2)
        self.station_id2_dateline1.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
      
        
        self.station_id2_state0=QtWidgets.QLabel(self.form2_1)
        self.station_id2_state0.setGeometry(400,200,10,10)
        self.station_id2_state0.setStyleSheet("QLabel{background-color:#338D27}") 
        
        self.station_id2_state1=QtWidgets.QLabel("正常",self.form2_1)
        self.station_id2_state1.setGeometry(420, 190, 100, 30)
        self.station_id2_state1.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}") 
        
        self.station_id2_state2=QtWidgets.QLabel(self.form2_1)
        self.station_id2_state2.setGeometry(400,230,10,10)
        self.station_id2_state2.setStyleSheet("QLabel{background-color:#C00000}") 
        
        self.station_id2_state3=QtWidgets.QLabel("短路",self.form2_1)
        self.station_id2_state3.setGeometry(420, 220, 100, 30)
        self.station_id2_state3.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}") 
        
        self.station_id2_state4=QtWidgets.QLabel(self.form2_1)
        self.station_id2_state4.setGeometry(400,260,10,10)
        self.station_id2_state4.setStyleSheet("QLabel{background-color:#004098}") 
        
        self.station_id2_state5=QtWidgets.QLabel("开路",self.form2_1)
        self.station_id2_state5.setGeometry(420, 250, 100, 30)
        self.station_id2_state5.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}") 
        
        self.station_id2_state6=QtWidgets.QLabel(self.form2_1)
        self.station_id2_state6.setGeometry(400,290,10,10)
        self.station_id2_state6.setStyleSheet("QLabel{background-color:#FDD000}") 
        
        self.station_id2_state7=QtWidgets.QLabel("阴影",self.form2_1)
        self.station_id2_state7.setGeometry(420, 280, 100, 30)
        self.station_id2_state7.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}") 
        
        self.LineDisplayGB3 = QtWidgets.QWidget(self.form2_1)
        self.LineDisplayGB3.setObjectName("LineDisplayGB3")
        self.LineDisplayGB3.setGeometry(QtCore.QRect(150, 300, 400, 200))
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        self.station_id3=QtWidgets.QLabel("算法选择",self.form2_1)
        self.station_id3.setGeometry(600,160,140,30)
        self.station_id3.setStyleSheet("QLabel{color:white;font-size:30px;font-weight:normal;font-family:SimHei;border-width: 1px;border-style: solid;border-color: black;background-color: #004098;}")
        self.station_id3.setAlignment(Qt.AlignCenter)  
        
        
        self.station_id3_state0=QtWidgets.QLabel("数据处理",self.form2_1)
        self.station_id3_state0.setGeometry(600, 290, 220, 30)
        self.station_id3_state0.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.station_id3_button=SwitchButton(self.form2_1)
        self.station_id3_button.setGeometry(730,285,220,30) 
        
        
        self.station_id3_state1=QtWidgets.QLabel("在线学习",self.form2_1)
        self.station_id3_state1.setGeometry(600, 330, 220, 30)
        self.station_id3_state1.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.station_id3_button1=SwitchButton(self.form2_1)
        self.station_id3_button1.setGeometry(730,325,220,30) 
        
        self.station_id3_state2=QtWidgets.QLabel("DRLR",self.form2_1)
        self.station_id3_state2.setGeometry(600, 370, 220, 30)
        self.station_id3_state2.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.station_id3_button2=SwitchButton(self.form2_1)
        self.station_id3_button2.setGeometry(730,365,220,30) 
        
        
        
        
        
        
        
        
        
        

        
        #天气
        self.weather_information=QtWidgets.QLabel(self.form3)
        self.weather_information.setGeometry(250, 125, 600,30)
        self.weather_information.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.weather_information.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.weather_information.setFrameShape(QFrame.Box)
        self.weather_information.setAlignment(Qt.AlignCenter)
        self.weather_information.setLineWidth(2)
        self.weather_information.setStyleSheet("QLabel{color:white;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #455DA5,stop: 0.5 #003FA0, stop: 1.0 #003694);}")

        self.weather_information1=HexagonWidget(55)
        self.weather_information1.setParent(self.form3)
        self.weather_information1.setGeometry(200, 110, 400, 400)
        
        self.weather_information2=QtWidgets.QLabel("当日",self.form3)
        self.weather_information2.setGeometry(210, 130, 40, 20)
        self.weather_information2.setStyleSheet("QLabel{color:white;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        
        
        
        self.weather_information3=QtWidgets.QLabel(self.form3)
        self.weather_information3.setGeometry(300, 130, 190, 20)
        self.weather_information3.setStyleSheet("QLabel{color:white;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.weather_information_label = QSvgWidget(self.form3)
        # 显示位置与大小：(x, y, w, h)
        self.weather_information_label.setGeometry(430, 130, 30, 20)      
        
        self.weather_line0 = QtWidgets.QWidget(self.form3)  # 注意，传入参数代表一个从属关系，表示创建的QWidget属于self，也就是MainWindow自身
        self.weather_line0.setGeometry(QtCore.QRect(480, 130, 1, 20))
        self.weather_line0.setStyleSheet("QWidget{background-color:white;}")
        
        self.weather_information4=QtWidgets.QLabel(self.form3)
        self.weather_information4.setGeometry(520, 130, 190, 20)
        self.weather_information4.setStyleSheet("QLabel{color:white;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.weather_line1 = QtWidgets.QWidget(self.form3)  # 注意，传入参数代表一个从属关系，表示创建的QWidget属于self，也就是MainWindow自身
        self.weather_line1.setGeometry(QtCore.QRect(650, 130, 1, 20))
        self.weather_line1.setStyleSheet("QWidget{background-color:white;}")
        
        self.weather_information5=QtWidgets.QLabel(self.form3)
        self.weather_information5.setGeometry(670, 130, 190, 20)
        self.weather_information5.setStyleSheet("QLabel{color:white;font-size:30px;font-weight:normal;font-family:SimHei;}")
        






        
        self.state0=QtWidgets.QLabel("光伏电站发电出力",self.form3)
        self.state0.setGeometry(150,180,200,30)
        self.state0.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.state0.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.state0.setFrameShape(QFrame.Box)
        self.state0.setAlignment(Qt.AlignCenter)
        self.state0.setLineWidth(2)
        self.state0.setStyleSheet("QLabel{color:white;font-size:30px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);background-color: #004098;}")
       
        #画图
        self.LineDisplayGB = QtWidgets.QWidget(self.form3)
        self.LineDisplayGB.setObjectName("LineDisplayGB")
        self.LineDisplayGB.setGeometry(QtCore.QRect(80, 250, 320, 300))
        
      
        self.state1=QtWidgets.QLabel("状态辨识特征向量",self.form3)
        self.state1.setGeometry(480,180,200,30)
        self.state1.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.state1.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.state1.setFrameShape(QFrame.Box)
        self.state1.setAlignment(Qt.AlignCenter)
        self.state1.setLineWidth(2)
        self.state1.setStyleSheet("QLabel{color:white;font-size:30px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);background-color: #004098;}")
       
        self.state11=QtWidgets.QLabel(self.form3)
        self.state11.setGeometry(470,220,10,10)
        self.state11.setStyleSheet("QLabel{background-color:#003D8F}") 
        
        self.state12=QtWidgets.QLabel("实际",self.form3)
        self.state12.setGeometry(490, 210, 100, 30)
        self.state12.setStyleSheet("QLabel{color:#003D8F;font-size:30px;font-weight:normal;font-family:SimHei;}")  
        
        self.state13=QtWidgets.QLabel(self.form3)
        self.state13.setGeometry(600,220,10,10)
        self.state13.setStyleSheet("QLabel{background-color:#C00000}") 
        
        self.state14=QtWidgets.QLabel("式样",self.form3)
        self.state14.setGeometry(620, 210, 100, 30)
        self.state14.setStyleSheet("QLabel{color:#C00000;font-size:30px;font-weight:normal;font-family:SimHei;}")       
       
        #画图
        self.LineDisplayGB2 = QtWidgets.QWidget(self.form3)
        self.LineDisplayGB2.setObjectName("LineDisplayGB")
        self.LineDisplayGB2.setGeometry(QtCore.QRect(410, 250, 320, 300))





        self.state2=QtWidgets.QLabel("实时发电状态",self.form3)
        self.state2.setGeometry(800,180,200,30)
        self.state2.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.state2.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.state2.setFrameShape(QFrame.Box)
        self.state2.setAlignment(Qt.AlignCenter)
        self.state2.setLineWidth(2)
        self.state2.setStyleSheet("QLabel{color:white;font-size:30px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);background-color: #004098;}")


  
        
        '''        
        songInfo = {
        'state0': '正常',
        'state1':'短路',
        'state2':'开路',
        'state3':'阴影'}
        self.songInfo = songInfo
        self.state0Name = self.songInfo['state0']
        self.state1Name = self.songInfo['state1']
        self.state2Name = self.songInfo['state2']
        self.state3Name = self.songInfo['state3']
        self.scrollTextWindow = ScrollTextWidget()
        self.scrollTextWindow.setParent(self.form3)
        self.scrollTextWindow.setGeometry(820,160,100,70)
'''

        self.state3=QtWidgets.QLabel(self.form3)
        self.state3.setGeometry(780,220,10,10)
        self.state3.setStyleSheet("QLabel{background-color:#338D27}") 
        


        self.state4=QtWidgets.QLabel("正常",self.form3)
        self.state4.setGeometry(800, 210, 100, 30)
        self.state4.setStyleSheet("QLabel{color:#338D27;font-size:30px;font-weight:normal;font-family:SimHei;}")

        self.state5=QtWidgets.QLabel(self.form3)
        self.state5.setGeometry(910,220,10,10)
        self.state5.setStyleSheet("QLabel{background-color:#B5B5B6}") 
        
        self.state6=QtWidgets.QLabel("短路",self.form3)
        self.state6.setGeometry(930, 210, 100, 30)
        self.state6.setStyleSheet("QLabel{color:#B5B5B6;font-size:30px;font-weight:normal;font-family:SimHei;}")

        self.state7=QtWidgets.QLabel(self.form3)
        self.state7.setGeometry(780,280,10,10)
        self.state7.setStyleSheet("QLabel{background-color:#B5B5B6}") 
        
        self.state8=QtWidgets.QLabel("开路",self.form3)
        self.state8.setGeometry(800, 270, 100, 30)
        self.state8.setStyleSheet("QLabel{color:#B5B5B6;font-size:30px;font-weight:normal;font-family:SimHei;}")

        self.state9=QtWidgets.QLabel(self.form3)
        self.state9.setGeometry(910,280,10,10)
        self.state9.setStyleSheet("QLabel{background-color:#B5B5B6}") 
        
        self.state10=QtWidgets.QLabel("阴影",self.form3)
        self.state10.setGeometry(930, 270, 100, 30)
        self.state10.setStyleSheet("QLabel{color:#B5B5B6;font-size:30px;font-weight:normal;font-family:SimHei;}")



        transform = QTransform()##需要用到pyqt5中QTransform函数
        transform.rotate(90)##设置旋转角度——顺时针旋转90°
        
        transform1 = QTransform()##需要用到pyqt5中QTransform函数
        transform1.rotate(180)##设置旋转角度——顺时针旋转90°


        self.arrow0=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow0.setParent(self.form3)
        self.arrow0.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow0.setGeometry(820,350,5,20)
        self.arrow0.setInvertedAppearance(False)
        self.arrow0.setOrientation(QtCore.Qt.Vertical)
        



        
        self.picture3 = QtWidgets.QLabel(self.form3)
        self.picture3.setObjectName("picture3")
        cover_img = os.path.abspath("myproject\\picture\\picture3.png")
        image1 = QtGui.QPixmap(cover_img)
        image1 =image1.transformed(transform)##对image进行旋转
        self.picture3.setScaledContents(True)
        self.picture3.setPixmap(image1)
        self.picture3.setGeometry(QtCore.QRect(810, 370, 20,30))
        
        self.arrow1=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow1.setParent(self.form3)
        self.arrow1.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow1.setGeometry(820,400,5,10)
        self.arrow1.setInvertedAppearance(False)
        self.arrow1.setOrientation(QtCore.Qt.Vertical)

        self.arrow1_1=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow1_1.setParent(self.form3)
        self.arrow1_1.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow1_1.setGeometry(820,410,5,10)
        self.arrow1_1.setInvertedAppearance(False)
        self.arrow1_1.setOrientation(QtCore.Qt.Vertical)




        
        self.arrow14=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow14.setParent(self.form3)
        self.arrow14.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #FFFFFF;}")
        self.arrow14.setGeometry(780,410,40,5)
        self.arrow14.setInvertedAppearance(False)


        self.arrow15=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow15.setParent(self.form3)
        self.arrow15.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #FFFFFF;}")
        self.arrow15.setGeometry(780,410,5,50)
        self.arrow15.setInvertedAppearance(False)
        self.arrow15.setOrientation(QtCore.Qt.Vertical)
        
        self.arrow16=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow16.setParent(self.form3)
        self.arrow16.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #FFFFFF;}")
        self.arrow16.setGeometry(780,460,40,5)
        self.arrow16.setInvertedAppearance(True)


        
        
        
        self.picture4 = QtWidgets.QLabel(self.form3)
        self.picture4.setObjectName("picture4")
        self.picture4.setScaledContents(True)
        self.picture4.setPixmap(image1)
        self.picture4.setGeometry(QtCore.QRect(810, 420, 20,30))
        
        self.arrow2=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow2.setParent(self.form3)
        self.arrow2.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow2.setGeometry(820,450,5,10)
        self.arrow2.setInvertedAppearance(False)
        self.arrow2.setOrientation(QtCore.Qt.Vertical)
        
        self.arrow2_1=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow2_1.setParent(self.form3)
        self.arrow2_1.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow2_1.setGeometry(820,460,5,10)
        self.arrow2_1.setInvertedAppearance(False)
        self.arrow2_1.setOrientation(QtCore.Qt.Vertical)




        self.picture5 = QtWidgets.QLabel(self.form3)
        self.picture5.setObjectName("picture4")
        self.picture5.setScaledContents(True)
        cover_img = os.path.abspath("myproject\\picture\\picture3.png")
        image1 = QtGui.QPixmap(cover_img)
        image1 =image1.transformed(transform)##对image进行旋转
        self.picture5.setScaledContents(True)
        self.picture5.setPixmap(image1)
        self.picture5.setGeometry(QtCore.QRect(810, 470, 20,30))


        self.picture5_1 = QtWidgets.QLabel(self.form3)
        self.picture5_1.setObjectName("picture7")
        self.picture5_1.setScaledContents(True)
        cover_img_1_0 = os.path.abspath("myproject\\picture\\picture3.png")
        image1_0 = QtGui.QPixmap(cover_img_1_0 )
        self.picture5_1.setPixmap(image1_0)
        self.picture5_1.setGeometry(QtCore.QRect(810, 420, 20,30))        
        




        self.arrow3=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow3.setParent(self.form3)
        self.arrow3.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow3.setGeometry(820,500,5,20)
        self.arrow3.setInvertedAppearance(False)
        self.arrow3.setOrientation(QtCore.Qt.Vertical)










        self.arrow4=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow4.setParent(self.form3)
        self.arrow4.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow4.setGeometry(900,350,5,20)
        self.arrow4.setInvertedAppearance(False)
        self.arrow4.setOrientation(QtCore.Qt.Vertical)
        
        self.picture6 = QtWidgets.QLabel(self.form3)
        self.picture6.setObjectName("picture3")
        cover_img = os.path.abspath("myproject\\picture\\picture3.png")
        image1 = QtGui.QPixmap(cover_img)
        image1 =image1.transformed(transform)##对image进行旋转
        self.picture6.setScaledContents(True)
        self.picture6.setPixmap(image1)
        self.picture6.setGeometry(QtCore.QRect(890, 370, 20,30))
        

        self.arrow5=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow5.setParent(self.form3)
        self.arrow5.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow5.setGeometry(900,400,5,20)
        self.arrow5.setInvertedAppearance(False)
        self.arrow5.setOrientation(QtCore.Qt.Vertical)
        
        self.picture7 = QtWidgets.QLabel(self.form3)
        self.picture7.setObjectName("picture4")
        self.picture7.setScaledContents(True)
        self.picture7.setPixmap(image1)
        self.picture7.setGeometry(QtCore.QRect(890, 420, 20,30))
        

        self.arrow6=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow6.setParent(self.form3)
        self.arrow6.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow6.setGeometry(900,450,5,20)
        self.arrow6.setInvertedAppearance(False)
        self.arrow6.setOrientation(QtCore.Qt.Vertical)
        
        self.picture8 = QtWidgets.QLabel(self.form3)
        self.picture8.setObjectName("picture4")
        self.picture8.setScaledContents(True)
        self.picture8.setPixmap(image1)
        self.picture8.setGeometry(QtCore.QRect(890, 470, 20,30))

        self.arrow7=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow7.setParent(self.form3)
        self.arrow7.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow7.setGeometry(900,500,5,20)
        self.arrow7.setInvertedAppearance(False)
        self.arrow7.setOrientation(QtCore.Qt.Vertical)
        
        







        self.arrow8=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow8.setParent(self.form3)
        self.arrow8.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow8.setGeometry(980,350,5,20)
        self.arrow8.setInvertedAppearance(False)
        self.arrow8.setOrientation(QtCore.Qt.Vertical)
        
        self.picture9 = QtWidgets.QLabel(self.form3)
        self.picture9.setObjectName("picture3")
        cover_img = os.path.abspath("myproject\\picture\\picture3.png")
        image1 = QtGui.QPixmap(cover_img)
        image1 =image1.transformed(transform)##对image进行旋转
        self.picture9.setScaledContents(True)
        self.picture9.setPixmap(image1)
        self.picture9.setGeometry(QtCore.QRect(970, 370, 20,30))
        

        self.arrow9=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow9.setParent(self.form3)
        self.arrow9.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow9.setGeometry(980,400,5,20)
        self.arrow9.setInvertedAppearance(False)
        self.arrow9.setOrientation(QtCore.Qt.Vertical)
        
        self.picture10 = QtWidgets.QLabel(self.form3)
        self.picture10.setObjectName("picture4")
        self.picture10.setScaledContents(True)
        self.picture10.setPixmap(image1)
        self.picture10.setGeometry(QtCore.QRect(970, 420, 20,30))
        

        self.arrow10=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow10.setParent(self.form3)
        self.arrow10.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow10.setGeometry(980,450,5,20)
        self.arrow10.setInvertedAppearance(False)
        self.arrow10.setOrientation(QtCore.Qt.Vertical)
        
        self.picture11 = QtWidgets.QLabel(self.form3)
        self.picture11.setObjectName("picture4")
        self.picture11.setScaledContents(True)
        self.picture11.setPixmap(image1)
        self.picture11.setGeometry(QtCore.QRect(970, 470, 20,30))

        self.arrow11=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow11.setParent(self.form3)
        self.arrow11.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow11.setGeometry(980,500,5,20)
        self.arrow11.setInvertedAppearance(False)
        self.arrow11.setOrientation(QtCore.Qt.Vertical)
        
        
        self.arrow12=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow12.setParent(self.form3)
        self.arrow12.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow12.setGeometry(820,345,250,5)
        self.arrow12.setInvertedAppearance(False)

        self.arrow13=QtWidgets.QProgressBar(self, minimum=0, maximum=0, textVisible=False,
                        )
        self.arrow13.setParent(self.form3)
        self.arrow13.setStyleSheet("QProgressBar{ border-radius: 4px;}"
                                  "QProgressBar::chunk{border-radius: 4px;background-color: #009688;}")
        self.arrow13.setGeometry(820,520,250,5)
        self.arrow13.setInvertedAppearance(False)



        self.picture13 = QtWidgets.QLabel(self.form3)
        self.picture13.setObjectName("picture4")
        cover_img2 = os.path.abspath("myproject\\picture\\picture5.png")
        image3 = QtGui.QPixmap(cover_img2)
        self.picture13.setScaledContents(True)
        self.picture13.setPixmap(image3)
        self.picture13.setGeometry(QtCore.QRect(1020, 350, 10,60))
        
        self.picture14 = QtWidgets.QLabel(self.form3)
        self.picture14.setObjectName("picture4")
        cover_img3 = os.path.abspath("myproject\\picture\\picture6.png")
        image4 = QtGui.QPixmap(cover_img3)
        self.picture14.setScaledContents(True)
        self.picture14.setPixmap(image4)
        self.picture14.setGeometry(QtCore.QRect(1010, 430, 40,30))
        
        self.picture15 = QtWidgets.QLabel(self.form3)
        self.picture15.setObjectName("picture4")
        cover_img2 = os.path.abspath("myproject\\picture\\picture5.png")
        image5 = QtGui.QPixmap(cover_img2)
        image5 =image5.transformed(transform1)##对image进行旋转
        self.picture15.setScaledContents(True)
        self.picture15.setPixmap(image5)
        self.picture15.setGeometry(QtCore.QRect(1020, 465, 10,50))
        
        
        
        
        self.LineDisplayGB1= QtWidgets.QWidget(self.form4)
        self.LineDisplayGB1.setObjectName("LineDisplayGB1")
        self.LineDisplayGB1.setGeometry(QtCore.QRect(130, 230, 350, 250))
        

        
        self.date_information_0=QtWidgets.QLabel(self.form4)
        self.date_information_0.setGeometry(110,90,400,400)        
        self.date_information_0.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.date_information_0.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.date_information_0.setFrameShape(QFrame.Box)
        self.date_information_0.setAlignment(Qt.AlignCenter)
        self.date_information_0.setLineWidth(2)
        self.date_information_0.setStyleSheet("QLabel{color:white;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")

        
        self.date_information0=QtWidgets.QLabel("光伏电站历史状态",self.form4)
        self.date_information0.setGeometry(200,95,180,30)
        self.date_information0.setAlignment(Qt.AlignCenter)
        self.date_information0.setStyleSheet("QLabel{color:white;font-size:30px;font-weight:normal;font-family:SimHei;background-color:#004098}")

        
        
        self.date_information=QtWidgets.QLabel("起始日期:",self.form4)
        self.date_information.setGeometry(150,130,100,30)
        self.date_information.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.date_information1=QtWidgets.QLabel("终止日期:",self.form4)
        self.date_information1.setGeometry(150,185,100,30)
        self.date_information1.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")

        #日期框
        self.datebox=QtWidgets.QDateEdit(self.form4)
        self.datebox.setDisplayFormat("yyyy-MM-dd")
        self.datebox.setGeometry(260, 130, 100, 30)
        self.datebox.setCalendarPopup(True)
        
        
        #天气
        self.dateline=QtWidgets.QLabel(self.form4)
        self.dateline.setGeometry(150, 165, 220, 2)
        self.dateline.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
      
  
  
        self.datebox1=QtWidgets.QDateEdit(self.form4)
        self.datebox1.setDisplayFormat("yyyy-MM-dd")
        self.datebox1.setGeometry(260, 185, 100, 30)
        self.datebox1.setCalendarPopup(True)
        
        
        #天气
        self.dateline1=QtWidgets.QLabel(self.form4)
        self.dateline1.setGeometry(150, 220, 220, 2)
        self.dateline1.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
      
        
        
        
        
        
        
        '''
        self.startbutton1=QtWidgets.QToolButton(self.form4)
        self.startbutton1.setGeometry(370, 120, 190, 30)
        self.startbutton1.setText("状态在线学习")
        self.startbutton1.setStyleSheet("QToolButton{color:rgb(0,0,0);border-color:rgb(170, 150, 163);background-color: rgb(170, 150, 163);}"
                                  "QToolButton::hover{color:rgb(58,164,98)}"
                                  "QToolButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.startbutton1.setFont(self.font)

        self.start_button = QtWidgets.QAction('开始状态学习', self.form4)
        self.analyze_button = QtWidgets.QAction('选取日期单独分析', self.form4)
        self.start_button.triggered.connect(self.startlearning1)
        self.analyze_button.triggered.connect(self.startanalyzing)
        self.popup_menu = QtWidgets.QMenu(self)
        self.popup_menu.addAction(self.start_button)
        self.popup_menu.addAction(self.analyze_button)        
        self.startbutton1.setPopupMode(QToolButton.InstantPopup)
        self.startbutton1.setAutoRaise(True)
        self.startbutton1.setMenu(self.popup_menu)
        '''

        self.stateanalyze0=QtWidgets.QLabel(self.form4)
        self.stateanalyze0.setGeometry(580,90,400,400)        
        self.stateanalyze0.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.stateanalyze0.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.stateanalyze0.setFrameShape(QFrame.Box)
        self.stateanalyze0.setAlignment(Qt.AlignCenter)
        self.stateanalyze0.setLineWidth(2)
        self.stateanalyze0.setStyleSheet("QLabel{color:white;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")


        
        
        self.stateanalyze = QtWidgets.QLabel("状态检测结果分析", self.form4)
        # 显示位置与大小：(x, y, w, h)
        self.stateanalyze.setGeometry(650, 95, 200, 30)
        self.stateanalyze.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.stateanalyze.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.stateanalyze.setFrameShape(QFrame.Box)
        self.stateanalyze.setAlignment(Qt.AlignCenter) 
        self.stateanalyze.setStyleSheet("QLabel{color:white;font-size:30px;font-weight:normal;font-family:SimHei;background-color:#004098}")

        self.LineDisplayGB4= QtWidgets.QWidget(self.form4)
        self.LineDisplayGB4.setObjectName("LineDisplayGB4")
        self.LineDisplayGB4.setGeometry(QtCore.QRect(590, 130, 380, 150))

        self.dateline3=QtWidgets.QLabel(self.form4)
        self.dateline3.setGeometry(590, 290, 380, 2)
        self.dateline3.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
      


        self.gridmenu=QtWidgets.QWidget(self.form4)
        self.gridmenu.setObjectName("gridmenu")
        # 设置窗口的左上角x,y,窗口的width和height
        self.gridmenu.setGeometry(QtCore.QRect(585,250,370,140))
        self.grid=QtWidgets.QHBoxLayout(self.gridmenu)
        self.grid.setSpacing(10)
        

        self.state_1 = QtWidgets.QPushButton('准确率',self.form4)
        self.grid.addWidget(self.state_1)
        self.state_1.setFont(self.font)
        self.state_1.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #0307AD,stop:0.89 #6E70C3,stop: 1.0 #D9D9D9);}"
                                  "QPushButton::hover{color:black}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.state_2 = QtWidgets.QPushButton('精确率',self.form4)
        self.grid.addWidget(self.state_2)
        self.state_2.setFont(self.font)
        self.state_2.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #0307AD,stop:0.89 #6E70C3,stop: 1.0 #D9D9D9);}"
                                  "QPushButton::hover{color:black}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.state_3 = QtWidgets.QPushButton('召回率',self.form4)
        self.grid.addWidget(self.state_3)
        self.state_3.setFont(self.font)
        self.state_3.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color:  qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #0307AD,stop:0.89 #6E70C3,stop: 1.0 #D9D9D9);}"
                                  "QPushButton::hover{color:black}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        
        self.state_4 = QtWidgets.QPushButton('F1分数',self.form4)
        self.grid.addWidget(self.state_4)
        self.state_4.setFont(self.font)
        self.state_4.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color:  qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #0307AD,stop:0.89 #6E70C3,stop: 1.0 #D9D9D9);}"
                                  "QPushButton::hover{color:black}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )

        self.my_state_5 = QtWidgets.QPushButton("正常",self.form4)
        self.my_state_5.setGeometry(590,350,80,30)
        self.my_state_5.setStyleSheet("QPushButton{font-size:30px;font-weight:normal;font-family:SimHei;color:green;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:0.89 #D9D9D9);}"
                                  "QPushButton::hover{color:white}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.my_state_5_text=QtWidgets.QLabel("90%",self.form4)
        self.my_state_5_text.setGeometry(680,350,80,30)
        self.my_state_5_text.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.my_state_5_text.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.my_state_5_text.setFrameShape(QFrame.Box)
        self.my_state_5_text.setAlignment(Qt.AlignCenter)
        self.my_state_5_text.setLineWidth(2)
        self.my_state_5_text.setStyleSheet("QLabel{color:black;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")

              
        self.my_state_6 = QtWidgets.QPushButton("开路",self.form4)
        self.my_state_6.setGeometry(800,350,80,30)
        self.my_state_6.setStyleSheet("QPushButton{font-size:30px;font-weight:normal;font-family:SimHei;color:blue;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:0.89 #D9D9D9);}"
                                  "QPushButton::hover{color:white}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.my_state_6_text=QtWidgets.QLabel("90%",self.form4)
        self.my_state_6_text.setGeometry(890,350,80,30)
        self.my_state_6_text.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.my_state_6_text.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.my_state_6_text.setFrameShape(QFrame.Box)
        self.my_state_6_text.setAlignment(Qt.AlignCenter)
        self.my_state_6_text.setLineWidth(2)
        self.my_state_6_text.setStyleSheet("QLabel{color:black;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")

          
        self.my_state_7 = QtWidgets.QPushButton("短路",self.form4)
        self.my_state_7.setGeometry(590,400,80,30)
        self.my_state_7.setFont(self.font)
        self.my_state_7.setStyleSheet("QPushButton{font-size:30px;font-weight:normal;font-family:SimHei;color:red;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:0.89 #D9D9D9);}"
                                  "QPushButton::hover{color:white}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.my_state_7_text=QtWidgets.QLabel("90%",self.form4)
        self.my_state_7_text.setGeometry(680,400,80,30)
        self.my_state_7_text.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.my_state_7_text.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.my_state_7_text.setFrameShape(QFrame.Box)
        self.my_state_7_text.setAlignment(Qt.AlignCenter)
        self.my_state_7_text.setLineWidth(2)
        self.my_state_7_text.setStyleSheet("QLabel{color:black;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")

          
        self.my_state_8 = QtWidgets.QPushButton("阴影",self.form4)
        self.my_state_8.setGeometry(800,400,80,30)
        self.my_state_8.setFont(self.font)
        self.my_state_8.setStyleSheet("QPushButton{font-size:30px;font-weight:normal;font-family:SimHei;color:yellow;border-color:rgb(170, 150, 163);background-color:qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:0.89 #D9D9D9);}"
                                  "QPushButton::hover{color:white}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.my_state_8_text=QtWidgets.QLabel("90%",self.form4)
        self.my_state_8_text.setGeometry(890,400,80,30)
        self.my_state_8_text.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.my_state_8_text.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.my_state_8_text.setFrameShape(QFrame.Box)
        self.my_state_8_text.setAlignment(Qt.AlignCenter)
        self.my_state_8_text.setLineWidth(2)
        self.my_state_8_text.setStyleSheet("QLabel{color:black;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")


        
        self.LineDisplayGB5= QtWidgets.QWidget(self.form5)
        self.LineDisplayGB5.setObjectName("LineDisplayGB5")
        self.LineDisplayGB5.setGeometry(QtCore.QRect(500, 190, 430, 130))
        
        self.comparsion0=QtWidgets.QLabel(self.form5)
        self.comparsion0.setGeometry(110,90,300,400)        
        self.comparsion0.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.comparsion0.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.comparsion0.setFrameShape(QFrame.Box)
        self.comparsion0.setAlignment(Qt.AlignCenter)
        self.comparsion0.setLineWidth(2)
        self.comparsion0.setStyleSheet("QLabel{color:white;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")

        self.comparsion00=QtWidgets.QLabel(self.form5)
        self.comparsion00.setGeometry(450,90,500,400)        
        self.comparsion00.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.comparsion00.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.comparsion00.setFrameShape(QFrame.Box)
        self.comparsion00.setAlignment(Qt.AlignCenter)
        self.comparsion00.setLineWidth(2)
        self.comparsion00.setStyleSheet("QLabel{color:white;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")

        self.comparsion1=QtWidgets.QLabel(self.form5)
        self.comparsion1.setGeometry(200,90,120,30)        
        self.comparsion1.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.comparsion1.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.comparsion1.setFrameShape(QFrame.Box)
        self.comparsion1.setAlignment(Qt.AlignCenter)
        self.comparsion1.setLineWidth(2)
        self.comparsion1.setStyleSheet("QLabel{color:white;font-size:25px;font-weight:normal;font-family:SimHei;background-color:#004098}")

        self.comparsion2=QtWidgets.QLabel("起始日期:",self.form5)
        self.comparsion2.setGeometry(150,130,100,30)
        self.comparsion2.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.comparsion3=QtWidgets.QLabel("终止日期:",self.form5)
        self.comparsion3.setGeometry(150,185,100,30)
        self.comparsion3.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")

        #日期框
        self.comparsion_datebox=QtWidgets.QDateEdit(self.form5)
        self.comparsion_datebox.setDisplayFormat("yyyy-MM-dd")
        self.comparsion_datebox.setGeometry(260, 130, 100, 30)
        self.comparsion_datebox.setCalendarPopup(True)
        
        
        #天气
        self.comparsion_dateline=QtWidgets.QLabel(self.form5)
        self.comparsion_dateline.setGeometry(150, 165, 220, 2)
        self.comparsion_dateline.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
      
  
  
        self.comparsion_datebox1=QtWidgets.QDateEdit(self.form5)
        self.comparsion_datebox1.setDisplayFormat("yyyy-MM-dd")
        self.comparsion_datebox1.setGeometry(260, 185, 100, 30)
        self.comparsion_datebox1.setCalendarPopup(True)
        
        
        #天气
        self.comparsion_dateline1=QtWidgets.QLabel(self.form5)
        self.comparsion_dateline1.setGeometry(150, 220, 220, 2)
        self.comparsion_dateline1.setStyleSheet("QLabel{background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #4045FC,stop: 1.0 #004098);}")
      

        self.comparsion4=QtWidgets.QLabel("对比方法设置",self.form5)
        self.comparsion4.setGeometry(150, 250, 220, 30)
        self.comparsion4.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.comparsion5=QtWidgets.QLabel("数据处理",self.form5)
        self.comparsion5.setGeometry(150, 290, 220, 30)
        self.comparsion5.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.comparsion5_button=SwitchButton(self.form5)
        self.comparsion5_button.setGeometry(280,285,220,30) 
        
        
        self.comparsion6=QtWidgets.QLabel("在线学习",self.form5)
        self.comparsion6.setGeometry(150, 330, 220, 30)
        self.comparsion6.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.comparsion6_button=SwitchButton(self.form5)
        self.comparsion6_button.setGeometry(280,325,220,30) 
        
        self.comparsion7=QtWidgets.QLabel("DRLR",self.form5)
        self.comparsion7.setGeometry(150, 370, 220, 30)
        self.comparsion7.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.comparsion7_button=SwitchButton(self.form5)
        self.comparsion7_button.setGeometry(280,365,220,30) 

        self.comparsion5_button.animation.finished.connect(self.on_button_clicked5)
        self.comparsion6_button.animation.finished.connect(self.on_button_clicked6)
        self.comparsion7_button.animation.finished.connect(self.on_button_clicked7)

        self.comparsion8=QtWidgets.QLabel("发电状态监测结果分析",self.form5)
        self.comparsion8.setGeometry(600,90,200,30)        
        self.comparsion8.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.comparsion8.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.comparsion8.setFrameShape(QFrame.Box)
        self.comparsion8.setAlignment(Qt.AlignCenter)
        self.comparsion8.setLineWidth(2)
        self.comparsion8.setStyleSheet("QLabel{color:white;font-size:25px;font-weight:normal;font-family:SimHei;background-color:#004098}")

        self.comparsion9=QtWidgets.QLabel(self.form5)
        self.comparsion9.setGeometry(600,140,10,10)
        self.comparsion9.setStyleSheet("QLabel{background-color:blue}") 
        
        self.comparsion10=QtWidgets.QLabel("所提方法",self.form5)
        self.comparsion10.setGeometry(620, 130, 100, 30)
        self.comparsion10.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.comparsion11=QtWidgets.QLabel(self.form5)
        self.comparsion11.setGeometry(730,140,10,10)
        self.comparsion11.setStyleSheet("QLabel{background-color:red}") 
        
        self.comparsion12=QtWidgets.QLabel("对比方法",self.form5)
        self.comparsion12.setGeometry(750, 130, 100, 30)
        self.comparsion12.setStyleSheet("QLabel{color:black;font-size:30px;font-weight:normal;font-family:SimHei;}")
        
        self.comparsion13=QtWidgets.QLabel("结果比较",self.form5)
        self.comparsion13.setGeometry(500, 160, 100, 20)
        self.comparsion13.setStyleSheet("QLabel{color:black;font-size:20px;font-weight:normal;font-family:SimHei;}")
        
        self.comparsion14=QtWidgets.QLabel(self.form5)
        self.comparsion14.setGeometry(490,180,450,150)        
        self.comparsion14.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.comparsion14.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.comparsion14.setFrameShape(QFrame.Box)
        self.comparsion14.setAlignment(Qt.AlignCenter)
        self.comparsion14.setLineWidth(2)
        self.comparsion14.setStyleSheet("QLabel{color:white;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")

        self.comparsion15=QtWidgets.QLabel("指标比较",self.form5)
        self.comparsion15.setGeometry(500, 340, 100, 20)
        self.comparsion15.setStyleSheet("QLabel{color:black;font-size:20px;font-weight:normal;font-family:SimHei;}")
        
        
        self.gridmenu1=QtWidgets.QWidget(self.form5)
        self.gridmenu1.setObjectName("gridmenu1")
        # 设置窗口的左上角x,y,窗口的width和height
        self.gridmenu1.setGeometry(QtCore.QRect(500,300,370,140))
        self.grid1=QtWidgets.QHBoxLayout(self.gridmenu1)
        self.grid1.setSpacing(10)        
        
        self.comparsion15 = QtWidgets.QPushButton('准确率',self.form5)
        self.grid1.addWidget(self.comparsion15)
        self.comparsion15.setFont(self.font)
        self.comparsion15.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #0307AD,stop:0.89 #6E70C3,stop: 1.0 #D9D9D9);}"
                                  "QPushButton::hover{color:white}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.comparsion16 = QtWidgets.QPushButton('精确率',self.form5)
        self.grid1.addWidget(self.comparsion16)
        self.comparsion16.setFont(self.font)
        self.comparsion16.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #0307AD,stop:0.89 #6E70C3,stop: 1.0 #D9D9D9);}"
                                  "QPushButton::hover{color:white}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.comparsion17 = QtWidgets.QPushButton('召回率',self.form5)
        self.grid1.addWidget(self.comparsion17)
        self.comparsion17.setFont(self.font)
        self.comparsion17.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color:  qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #0307AD,stop:0.89 #6E70C3,stop: 1.0 #D9D9D9);}"
                                  "QPushButton::hover{color:white}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        
        self.comparsion18 = QtWidgets.QPushButton('F1分数',self.form5)
        self.grid1.addWidget(self.comparsion18)
        self.comparsion18.setFont(self.font)
        self.comparsion18.setStyleSheet("QPushButton{color:white;border-color:rgb(170, 150, 163);background-color:  qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #0307AD,stop:0.89 #6E70C3,stop: 1.0 #D9D9D9);}"
                                  "QPushButton::hover{color:white}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )

        self.comparsion19 = QtWidgets.QPushButton("正常",self.form5)
        self.comparsion19.setGeometry(500,390,80,30)
        self.comparsion19.setStyleSheet("QPushButton{font-size:30px;font-weight:normal;font-family:SimHei;color:green;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:0.89 #D9D9D9);}"
                                  "QPushButton::hover{color:white}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.comparsion19_text=QtWidgets.QLabel("90%",self.form5)
        self.comparsion19_text.setGeometry(590,390,80,30)
        self.comparsion19_text.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.comparsion19_text.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.comparsion19_text.setFrameShape(QFrame.Box)
        self.comparsion19_text.setAlignment(Qt.AlignCenter)
        self.comparsion19_text.setLineWidth(2)
        self.comparsion19_text.setStyleSheet("QLabel{color:black;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")

              
        self.comparsion20 = QtWidgets.QPushButton("开路",self.form5)
        self.comparsion20.setGeometry(700,390,80,30)
        self.comparsion20.setStyleSheet("QPushButton{font-size:30px;font-weight:normal;font-family:SimHei;color:blue;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:0.89 #D9D9D9);}"
                                  "QPushButton::hover{color:white}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.comparsion20_text=QtWidgets.QLabel("90%",self.form5)
        self.comparsion20_text.setGeometry(790,390,80,30)
        self.comparsion20_text.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.comparsion20_text.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.comparsion20_text.setFrameShape(QFrame.Box)
        self.comparsion20_text.setAlignment(Qt.AlignCenter)
        self.comparsion20_text.setLineWidth(2)
        self.comparsion20_text.setStyleSheet("QLabel{color:black;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")

          
        self.comparsion21 = QtWidgets.QPushButton("短路",self.form5)
        self.comparsion21.setGeometry(500,440,80,30)
        self.comparsion21.setFont(self.font)
        self.comparsion21.setStyleSheet("QPushButton{font-size:30px;font-weight:normal;font-family:SimHei;color:red;border-color:rgb(170, 150, 163);background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:0.89 #D9D9D9);}"
                                  "QPushButton::hover{color:white}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.comparsion21_text=QtWidgets.QLabel("90%",self.form5)
        self.comparsion21_text.setGeometry(590,440,80,30)
        self.comparsion21_text.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.comparsion21_text.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.comparsion21_text.setFrameShape(QFrame.Box)
        self.comparsion21_text.setAlignment(Qt.AlignCenter)
        self.comparsion21_text.setLineWidth(2)
        self.comparsion21_text.setStyleSheet("QLabel{color:black;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")

          
        self.comparsion22 = QtWidgets.QPushButton("阴影",self.form5)
        self.comparsion22.setGeometry(700,440,80,30)
        self.comparsion22.setFont(self.font)
        self.comparsion22.setStyleSheet("QPushButton{font-size:30px;font-weight:normal;font-family:SimHei;color:yellow;border-color:rgb(170, 150, 163);background-color:qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,stop:0 #FFFFFF,stop:0.89 #D9D9D9);}"
                                  "QPushButton::hover{color:white}"
                                  "QPushButton:pressed{color:rgb(0,0,0);border:none;}"
                                    )
        self.comparsion22_text=QtWidgets.QLabel("90%",self.form5)
        self.comparsion22_text.setGeometry(790,440,80,30)
        self.comparsion22_text.setFrameShape(QtWidgets.QFrame.Box)
        # 设置阴影 据说只有加了这步才能设置边框颜色。///可选样式有Raised、Sunken、Plain（这个无法设置颜色）等
        self.comparsion22_text.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置背景颜色，包括边框颜色
        # self.label.setStyleSheet()
        self.comparsion22_text.setFrameShape(QFrame.Box)
        self.comparsion22_text.setAlignment(Qt.AlignCenter)
        self.comparsion22_text.setLineWidth(2)
        self.comparsion22_text.setStyleSheet("QLabel{color:black;font-size:25px;font-weight:normal;font-family:SimHei;border-width: 1px;border-color:rgb(170, 150, 163);}")


        
        self.loadinggif=loadingGif()
        self.loadinggif.setGeometry(0,0,50,50)
        self.loadinggif.setParent(self.centralwidget)
        op1 = QtWidgets.QGraphicsOpacityEffect()
        # 设置透明度的值，0.0到1.0，最小值0是透明，1是不透明
        op1.setOpacity(0)
        self.loadinggif.setGraphicsEffect(op1)
        
        
        
        
      
        self.stackedWidget=QtWidgets.QStackedWidget()
        self.Layout = QVBoxLayout(self.centralwidget)
        self.Layout.addWidget(self.stackedWidget)
        self.stackedWidget.addWidget(self.form1)
        self.stackedWidget.addWidget(self.form2_0)
        self.stackedWidget.addWidget(self.form2_1)
        self.stackedWidget.addWidget(self.form3)
        self.stackedWidget.addWidget(self.form4)
        self.stackedWidget.addWidget(self.form5)
        

        
  
        
      

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        
    def update_table_data(self):
        self.table.clearContents()  # 清空表格数据
        a=[]
        self.data=[]
        if self.num > 0:
            self.table.setRowCount(self.num)
            self.a = [str(i) for i in range(1, self.num+1)]
            self.table.setVerticalHeaderLabels(self.a)


            x4=0
            #my_temp=eng.myls(0, 100,self.num)
            for i in range(0,self.num):

             for j in range(0,4):
              if j==0:
                x1 = random.uniform(0,100)

                #x1=my_temp[i][j]
                item1 = QtWidgets.QTableWidgetItem(str(x1))
                self.table.setItem(i,j,item1)
              if j==1:
                x2 = random.uniform(0,100)
                #x2 = my_temp[i][j]
                item2 = QtWidgets.QTableWidgetItem(str(x2))
                self.table.setItem(i, j, item2)
              if j==2:
                x3 = x1*x2
                item3 = QtWidgets.QTableWidgetItem(str(x3))
                self.table.setItem(i, j, item3)
              if j==3:
                item4 = QtWidgets.QTableWidgetItem(str(x4))

                self.table.setItem(i, j, item4)
             temp=[x1,x2,x3,x4]
             x4=x4+1
             self.data.append(temp)
      
    def slot(self,id):
        self.id=id
    def gotoanother0(self):
        self.station_id.setParent(self.form1)
        self.stackedWidget.setCurrentIndex(0)
    def gotoanother1(self):
        if self.station_id1.currentIndex()==0:

          self.station_id.setParent(self.form2_0)
          self.station_id1.setParent(self.form2_0)
          self.station_id1_button0.setParent(self.form2_0)
          self.station_id1_button1.setParent(self.form2_0)
          self.station_id1_button2.setParent(self.form2_0)
          self.station_id1_button3.setParent(self.form2_0)
          self.station_id1_button4.setParent(self.form2_0)

          self.stackedWidget.setCurrentIndex(1)
        elif self.station_id1.currentIndex()==1:

          self.station_id.setParent(self.form2_1)
          self.station_id1.setParent(self.form2_1)
          self.station_id1_button0.setParent(self.form2_1)
          self.station_id1_button1.setParent(self.form2_1)
          self.station_id1_button2.setParent(self.form2_1)
          self.station_id1_button3.setParent(self.form2_1)
          self.station_id1_button4.setParent(self.form2_1)
          self.stackedWidget.setCurrentIndex(2)
    def gotoanother2(self):
        self.station_id.setParent(self.form3)
        self.stackedWidget.setCurrentIndex(3)

    def gotoanother3(self):
        self.station_id.setParent(self.form4)    
        self.stackedWidget.setCurrentIndex(4)
    def gotoanother4(self):
        self.station_id.setParent(self.form5)
        self.stackedWidget.setCurrentIndex(5)
        




        
        
        
        
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))






